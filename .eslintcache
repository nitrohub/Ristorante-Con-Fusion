[{"/home/hp/Desktop/ReactCoursera/myapp/src/App.js":"1","/home/hp/Desktop/ReactCoursera/myapp/src/components/MenuComponent.js":"2","/home/hp/Desktop/ReactCoursera/myapp/src/components/DishdetailComponent.js":"3","/home/hp/Desktop/ReactCoursera/myapp/src/index.js":"4","/home/hp/Desktop/ReactCoursera/myapp/src/reportWebVitals.js":"5","/home/hp/Desktop/ReactCoursera/myapp/src/components/MainComponent.js":"6","/home/hp/Desktop/ReactCoursera/myapp/src/components/FooterComponent.js":"7","/home/hp/Desktop/ReactCoursera/myapp/src/components/HeaderComponent.js":"8","/home/hp/Desktop/ReactCoursera/myapp/src/components/HomeComponent.js":"9","/home/hp/Desktop/ReactCoursera/myapp/src/components/AboutComponent.js":"10","/home/hp/Desktop/ReactCoursera/myapp/src/components/ContactComponent.js":"11","/home/hp/Desktop/ReactCoursera/myapp/src/shared/promotions.js":"12","/home/hp/Desktop/ReactCoursera/myapp/src/shared/dishes.js":"13","/home/hp/Desktop/ReactCoursera/myapp/src/shared/comments.js":"14","/home/hp/Desktop/ReactCoursera/myapp/src/shared/leaders.js":"15","/home/hp/Desktop/ReactCoursera/myapp/src/redux/configureStore.js":"16","/home/hp/Desktop/ReactCoursera/myapp/src/components/CommentForm.js":"17","/home/hp/Desktop/ReactCoursera/myapp/src/redux/dishes.js":"18","/home/hp/Desktop/ReactCoursera/myapp/src/redux/promotions.js":"19","/home/hp/Desktop/ReactCoursera/myapp/src/redux/ActionCreators.js":"20","/home/hp/Desktop/ReactCoursera/myapp/src/redux/comments.js":"21","/home/hp/Desktop/ReactCoursera/myapp/src/components/LoadingComponent.js":"22","/home/hp/Desktop/ReactCoursera/myapp/src/redux/forms.js":"23","/home/hp/Desktop/ReactCoursera/myapp/src/redux/ActionTypes.js":"24","/home/hp/Desktop/ReactCoursera/myapp/src/shared/baseUrl.js":"25"},{"size":691,"mtime":1608975233963,"results":"26","hashOfConfig":"27"},{"size":2216,"mtime":1611381557510,"results":"28","hashOfConfig":"27"},{"size":3403,"mtime":1611381537310,"results":"29","hashOfConfig":"27"},{"size":658,"mtime":1608218042821,"results":"30","hashOfConfig":"27"},{"size":362,"mtime":1606817261177,"results":"31","hashOfConfig":"27"},{"size":3526,"mtime":1611381498157,"results":"32","hashOfConfig":"27"},{"size":2535,"mtime":1608907349846,"results":"33","hashOfConfig":"27"},{"size":4313,"mtime":1608920994064,"results":"34","hashOfConfig":"27"},{"size":1485,"mtime":1611381542290,"results":"35","hashOfConfig":"27"},{"size":4315,"mtime":1570998749000,"results":"36","hashOfConfig":"27"},{"size":10912,"mtime":1608981522104,"results":"37","hashOfConfig":"27"},{"size":435,"mtime":1570998749000,"results":"38","hashOfConfig":"27"},{"size":1448,"mtime":1570998749000,"results":"39","hashOfConfig":"27"},{"size":4118,"mtime":1570998749000,"results":"40","hashOfConfig":"27"},{"size":2345,"mtime":1570998749000,"results":"41","hashOfConfig":"27"},{"size":774,"mtime":1610296490836,"results":"42","hashOfConfig":"27"},{"size":3563,"mtime":1610297798919,"results":"43","hashOfConfig":"27"},{"size":587,"mtime":1611332367564,"results":"44","hashOfConfig":"27"},{"size":184,"mtime":1611381564206,"results":"45","hashOfConfig":"27"},{"size":2111,"mtime":1611381715783,"results":"46","hashOfConfig":"27"},{"size":837,"mtime":1611381521974,"results":"47","hashOfConfig":"27"},{"size":246,"mtime":1611310794715,"results":"48","hashOfConfig":"27"},{"size":156,"mtime":1610296341833,"results":"49","hashOfConfig":"27"},{"size":209,"mtime":1610287001387,"results":"50","hashOfConfig":"27"},{"size":49,"mtime":1611327639763,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1ai0bvz",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/hp/Desktop/ReactCoursera/myapp/src/App.js",[],["113","114"],"/home/hp/Desktop/ReactCoursera/myapp/src/components/MenuComponent.js",[],"/home/hp/Desktop/ReactCoursera/myapp/src/components/DishdetailComponent.js",[],["115","116"],"/home/hp/Desktop/ReactCoursera/myapp/src/index.js",[],["117","118"],"/home/hp/Desktop/ReactCoursera/myapp/src/reportWebVitals.js",[],"/home/hp/Desktop/ReactCoursera/myapp/src/components/MainComponent.js",["119"],"/home/hp/Desktop/ReactCoursera/myapp/src/components/FooterComponent.js",[],["120","121"],"/home/hp/Desktop/ReactCoursera/myapp/src/components/HeaderComponent.js",["122"],"import React, { Component } from 'react';\nimport { Navbar,Form, FormGroup,Input,Label, NavbarBrand, Nav, Modal,Button,ModalBody,ModalHeader,ModalNav, NavbarToggler, Collapse, NavItem, Jumbotron } from 'reactstrap';\nimport {NavLink} from 'react-router-dom';\n\n\nclass HeaderComponent extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      isNavOpen: false,\n      isModalOpen : false\n    };\n\n    this.toggleNav = this.toggleNav.bind(this);\n    this.toggleModal = this.toggleModal.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n  }\n\n\n  toggleModal(){\n    this.setState({\n      isModalOpen : !this.state.isModalOpen\n    });\n  }\n\n  toggleNav(){\n    this.setState({\n      isNavOpen: !this.state.isNavOpen,\n    });\n  }\n\n  handleLogin(event){\n    this.toggleModal();\n    console.log(\"Login Alert!\");\n    alert(\"Username : \"+this.username.value+\"Password : \"+this.password.value+\" Remember : \"+this.remember.checked);\n    event.preventDefault();\n  }\n\n  render() {\n    return(\n    <React.Fragment>\n      <Navbar dark expand=\"md\">\n        <div className=\"container\">\n          <NavbarToggler onClick={this.toggleNav} />\n          <NavbarBrand className=\"mr-auto\" href=\"/\">\n            <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\" alt = \"Ristrorante Con Fusion\"/>\n          </NavbarBrand>\n          <Collapse isOpen={this.state.isNavOpen} navbar>\n            <Nav navbar>\n              <NavItem>\n                <NavLink className=\"nav-link\" to=\"/home\">\n                  <span className=\"fa fa-home fa-lg\"></span> Home\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink className=\"nav-link\" to=\"/aboutus\">\n                  <span className=\"fa fa-info fa-lg\"></span> About Us\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink className=\"nav-link\" to=\"/menu\">\n                  <span className=\"fa fa-list fa-lg\"></span> Menu\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink className=\"nav-link\" to=\"/contactus\">\n                  <span className=\"fa fa-address-card fa-lg\"></span> Contact Us\n                </NavLink>\n              </NavItem>\n            </Nav>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <Button outline onClick={this.toggleModal}>\n                  <span className=\"fa fa-sign-in\"></span>Login\n                </Button>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </div>\n      </Navbar>\n      <Jumbotron style={{background:\"rgb(143, 95, 226)\"}}>\n           <div className=\"container\">\n               <div className=\"row row-header\">\n                   <div className=\"col-12 col-sm-6\">\n                       <h1>Ristorante con Fusion</h1>\n                       <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\n                   </div>\n               </div>\n           </div>\n       </Jumbotron>\n       <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n         <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n         <ModalBody>\n           <Form onSubmit={this.handleLogin}>\n             <FormGroup>\n               <Label htmlFor=\"username\">Username</Label>\n               <Input type=\"text\" id=\"username\" name=\"username\" \n               innerRef={(input)=> this.username = input}\n               />\n             </FormGroup>\n             <FormGroup>\n               <Label htmlFor=\"password\">Password</Label>\n               <Input type=\"password\" id=\"password\" name=\"password\" \n               innerRef={(input)=> this.password = input}\n               />\n             </FormGroup>\n             <FormGroup check>\n               <Label check>\n                 <Input type=\"checkbox\" name=\"remember\" \n                 innerRef={(input)=> this.remember = input}\n                 />\n                 Remember me\n               </Label>\n             </FormGroup>\n             <Button type=\"submit\" color=\"primary\" className=\"bg-primary\" value=\"submit\">Login</Button>\n           </Form>\n         </ModalBody>\n       </Modal>\n    </React.Fragment>\n    );\n  }\n}\n\nexport default HeaderComponent;","/home/hp/Desktop/ReactCoursera/myapp/src/components/HomeComponent.js",[],"/home/hp/Desktop/ReactCoursera/myapp/src/components/AboutComponent.js",[],"/home/hp/Desktop/ReactCoursera/myapp/src/components/ContactComponent.js",["123","124","125","126","127","128","129","130"],"import React,{ Component } from 'react';\nimport {Breadcrumb, Button, BreadcrumbItem, Label, Row, Col } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { Link } from 'react-router-dom';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length<=len);\nconst minLength = (len) => (val) => (val) && (val.length>=len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\n\n//state and handleInputChange will be automatically managed by redux\nclass Contact extends Component {\n\n    constructor(props){\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    \n\n    handleSubmit(values){\n        console.log('Current State is: ' + JSON.stringify(values));\n        alert('Current State is: ' + JSON.stringify(values));\n    }\n\n    // handleBlur = (field) =>(event) =>{\n    //     this.setState({\n    //         touched : { ...this.state.touched, [field]:true }\n    //     });\n    // }\n\n    // validate(firstname, lastname, telnum, email) {\n    //     const errors = {\n    //         firstname:'',\n    //         lastname:'',\n    //         telnum:'',\n    //         email:'',\n    //     };\n\n    //     if(this.state.touched.firstname && firstname.length < 3){\n    //         errors.firstname = 'First Name should be >= 3 characters';\n    //     }else if(this.state.touched.firstname && firstname.length > 10){\n    //         errors.firstname = 'First Name should be <=10 characters';\n    //     }if(this.state.touched.lastname && lastname.length<3){\n    //         errors.lastname = 'Last Name should be >= 3 characters';\n    //     }else if(this.state.touched.lastname && lastname.length>10){\n    //         errors.lastname = 'Last Name should be <=10 characters';\n    //     }\n\n    //     const reg =/^\\d+$/;\n    //     if(this.state.touched.telnum && !reg.test(telnum)){\n    //         errors.telnum = 'Tel. Number should contain only digits'; \n    //     }\n\n    //     if(this.state.touched.email && email.split('').filter(x=> x=== '@').length !==1){\n    //         errors.email = 'Email should contain a @';\n    //     }\n\n    //     return errors;\n\n    // }\n\n    render(){\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem>\n                            <Link to='/home'>Home</Link>\n                        </BreadcrumbItem>\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Contact Us</h3>\n                        <hr/>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                    <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                            <h5>Our Address</h5>\n                            <address>\n                            121, Abc def ghi jkl<br />\n                            Abc def ghi, mno<br />\n                            INDIA<br />\n                            <i className=\"fa fa-phone\"></i>: +91 01234 56789<br />\n                            <i className=\"fa fa-fax\"></i>: +91 98765 43210<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                            </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+910123456789\"><i className=\"fa fa-phone\"></i> Call</a>\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Send Us Your Feedback</h3>\n                    </div>\n                    <div className=\"col-12 col-md-9\">\n                    <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                    <Row className=\"form-group\">\n                        <Label md={2} htmlFor=\"firstname\" >First Name</Label>\n                        <Col md={10}>  {/*md is for Colspan*/}\n                            <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\" placeholder=\"First Name\"\n                            className=\"form-control\"\n                            validators = {{\n                                required, minLength:minLength(3), maxLength: maxLength(15)\n                            }}\n                            />\n                            <Errors \n                            className =\"text-danger\"\n                            model=\".firstname\"\n                            show=\"touched\"\n                            messages={{\n                                required: 'Required',\n                                minLength: 'Must be greater than 2 characters',\n                                maxLength: 'Must be less than or equal to 15 characters'\n                            }}\n                            />\n                        </Col>\n                    </Row>\n                    <Row className=\"form-group\">\n                        <Label md={2} htmlFor=\"lastname\" >Last Name</Label>\n                            <Col md={10}>\n                                <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\" placeholder=\"Last Name\"\n                                className=\"form-control\"\n                                validators = {{\n                                    required, minLength:minLength(3), maxLength: maxLength(15)\n                                }}\n                                />\n                                <Errors \n                            className =\"text-danger\"\n                            model=\".lastname\"\n                            show=\"touched\"\n                            messages={{\n                                required: 'Required',\n                                minLength: 'Must be greater than 2 characters',\n                                maxLength: 'Must be less than or equal to 15 characters'\n                            }}\n                            />\n                            </Col>\n                    </Row>\n                    <Row className=\"form-group\">\n                        <Label md={2} htmlFor=\"telnum\">Phone</Label>\n                        <Col md={10}>\n                            <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\" placeholder=\"Phone Number\" \n                            className=\"form-control\"   \n                            validators = {{\n                                required, minLength:minLength(3), maxLength: maxLength(15), isNumber\n                            }}                         \n                            />\n                            <Errors \n                            className =\"text-danger\"\n                            model=\".telnum\"\n                            show=\"touched\"\n                            messages={{\n                                required: 'Required',\n                                minLength: 'Must be greater than 2 numbers',\n                                maxLength: 'Must be less than or equal to 15 numbers',\n                                isNumber : 'Must be a number'\n                            }}\n                            />\n                        </Col>\n                    </Row>\n                    <Row className=\"form-group\">\n                        <Label md={2} htmlFor=\"email\">Email</Label>\n                        <Col md={10}>\n                            <Control.text model=\".email\" id=\"email\" name=\"email\" placeholder=\"Email\"\n                            className=\"form-control\"\n                            validators = {{\n                                required, validEmail\n                            }}   \n                            />\n                            <Errors \n                            className =\"text-danger\"\n                            model=\".email\"\n                            show=\"touched\"\n                            messages={{\n                                required: 'Required',\n                                validEmail: 'Invalid email Address'\n                            }}\n                            />\n                        </Col>\n                    </Row>\n                    <Row className=\"form-group\">\n                        <Col md={{size: 6, offset: 2}}>\n                            <div className=\"form-check\">\n                                <Label check>\n                                    <Control.checkbox model=\".agree\" name=\"agree\"\n                                    className=\"form-check-input\"\n                                    /> {' '}\n                                    <strong>May we contact you?</strong>\n                                </Label> \n                            </div>\n                        </Col>\n                        <Col md={{size: 3, offset: 1}}>\n                            <Control.select model=\".contactType\" name=\"contactType\" \n                            className=\"form-control\"> \n                            <option>Tel.</option>\n                            <option>Email</option>\n                            </Control.select>\n                        </Col>\n                    </Row>\n                    <Row className=\"form-group\">\n                        <Label md={2} htmlFor=\"feedback\">Feedback</Label>\n                        <Col md={10}>\n                            <Control.textarea model=\".message\" id=\"message\" rows=\"12\" name=\"feedback\" placeholder=\"Feedback\" \n                            className=\"form-control\"\n                            />\n                        </Col>\n                    </Row>\n                    <Row row>\n                        <Col md={{size: 10, offset: 2}}>\n                            <Button type=\"submit\" color=\"primary\">\n                                Send Feedback\n                            </Button>\n                        </Col>\n                    </Row>\n                    </LocalForm>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Contact;","/home/hp/Desktop/ReactCoursera/myapp/src/shared/promotions.js",[],["131","132"],"/home/hp/Desktop/ReactCoursera/myapp/src/shared/dishes.js",[],["133","134"],"/home/hp/Desktop/ReactCoursera/myapp/src/shared/comments.js",[],["135","136"],"/home/hp/Desktop/ReactCoursera/myapp/src/shared/leaders.js",[],["137","138"],"/home/hp/Desktop/ReactCoursera/myapp/src/redux/configureStore.js",[],["139","140"],"/home/hp/Desktop/ReactCoursera/myapp/src/components/CommentForm.js",[],"/home/hp/Desktop/ReactCoursera/myapp/src/redux/dishes.js",[],"/home/hp/Desktop/ReactCoursera/myapp/src/redux/promotions.js",[],"/home/hp/Desktop/ReactCoursera/myapp/src/redux/ActionCreators.js",["141"],"/home/hp/Desktop/ReactCoursera/myapp/src/redux/comments.js",["142"],"/home/hp/Desktop/ReactCoursera/myapp/src/components/LoadingComponent.js",[],"/home/hp/Desktop/ReactCoursera/myapp/src/redux/forms.js",[],"/home/hp/Desktop/ReactCoursera/myapp/src/redux/ActionTypes.js",[],"/home/hp/Desktop/ReactCoursera/myapp/src/shared/baseUrl.js",[],{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"143","replacedBy":"147"},{"ruleId":"145","replacedBy":"148"},{"ruleId":"143","replacedBy":"149"},{"ruleId":"145","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":32,"column":5,"nodeType":"153","messageId":"154","endLine":34,"endColumn":6},{"ruleId":"143","replacedBy":"155"},{"ruleId":"145","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":2,"column":99,"nodeType":"159","messageId":"160","endLine":2,"endColumn":107},{"ruleId":"161","severity":1,"message":"162","line":101,"column":29,"nodeType":"163","endLine":101,"endColumn":71},{"ruleId":"164","severity":1,"message":"165","line":115,"column":29,"nodeType":"163","endLine":120,"endColumn":31},{"ruleId":"164","severity":1,"message":"165","line":136,"column":33,"nodeType":"163","endLine":141,"endColumn":35},{"ruleId":"164","severity":1,"message":"165","line":157,"column":29,"nodeType":"163","endLine":162,"endColumn":31},{"ruleId":"164","severity":1,"message":"165","line":179,"column":29,"nodeType":"163","endLine":184,"endColumn":31},{"ruleId":"164","severity":1,"message":"166","line":200,"column":37,"nodeType":"163","endLine":202,"endColumn":39},{"ruleId":"164","severity":1,"message":"167","line":208,"column":29,"nodeType":"163","endLine":209,"endColumn":54},{"ruleId":"164","severity":1,"message":"168","line":218,"column":29,"nodeType":"163","endLine":220,"endColumn":31},{"ruleId":"143","replacedBy":"169"},{"ruleId":"145","replacedBy":"170"},{"ruleId":"143","replacedBy":"171"},{"ruleId":"145","replacedBy":"172"},{"ruleId":"143","replacedBy":"173"},{"ruleId":"145","replacedBy":"174"},{"ruleId":"143","replacedBy":"175"},{"ruleId":"145","replacedBy":"176"},{"ruleId":"143","replacedBy":"177"},{"ruleId":"145","replacedBy":"178"},{"ruleId":"157","severity":1,"message":"179","line":2,"column":10,"nodeType":"159","messageId":"160","endLine":2,"endColumn":16},{"ruleId":"157","severity":1,"message":"180","line":1,"column":10,"nodeType":"159","messageId":"160","endLine":1,"endColumn":18},"no-native-reassign",["181"],"no-negated-in-lhs",["182"],["181"],["182"],["181"],["182"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["181"],["182"],"no-unused-vars","'ModalNav' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE",["181"],["182"],["181"],["182"],["181"],["182"],["181"],["182"],["181"],["182"],"'DISHES' is defined but never used.","'COMMENTS' is defined but never used.","no-global-assign","no-unsafe-negation"]