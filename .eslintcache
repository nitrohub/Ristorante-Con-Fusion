[{"/home/hp/Desktop/ReactCoursera/myapp/src/App.js":"1","/home/hp/Desktop/ReactCoursera/myapp/src/components/MenuComponent.js":"2","/home/hp/Desktop/ReactCoursera/myapp/src/components/DishdetailComponent.js":"3","/home/hp/Desktop/ReactCoursera/myapp/src/index.js":"4","/home/hp/Desktop/ReactCoursera/myapp/src/reportWebVitals.js":"5","/home/hp/Desktop/ReactCoursera/myapp/src/components/MainComponent.js":"6","/home/hp/Desktop/ReactCoursera/myapp/src/components/FooterComponent.js":"7","/home/hp/Desktop/ReactCoursera/myapp/src/components/HeaderComponent.js":"8","/home/hp/Desktop/ReactCoursera/myapp/src/components/HomeComponent.js":"9","/home/hp/Desktop/ReactCoursera/myapp/src/components/AboutComponent.js":"10","/home/hp/Desktop/ReactCoursera/myapp/src/components/ContactComponent.js":"11","/home/hp/Desktop/ReactCoursera/myapp/src/shared/promotions.js":"12","/home/hp/Desktop/ReactCoursera/myapp/src/shared/dishes.js":"13","/home/hp/Desktop/ReactCoursera/myapp/src/shared/comments.js":"14","/home/hp/Desktop/ReactCoursera/myapp/src/shared/leaders.js":"15","/home/hp/Desktop/ReactCoursera/myapp/src/redux/configureStore.js":"16"},{"size":626,"mtime":1608974993112,"results":"17","hashOfConfig":"18"},{"size":1521,"mtime":1570998749000,"results":"19","hashOfConfig":"18"},{"size":2666,"mtime":1570998749000,"results":"20","hashOfConfig":"18"},{"size":658,"mtime":1608218042821,"results":"21","hashOfConfig":"18"},{"size":362,"mtime":1606817261177,"results":"22","hashOfConfig":"18"},{"size":2529,"mtime":1608974539382,"results":"23","hashOfConfig":"18"},{"size":2535,"mtime":1608907349846,"results":"24","hashOfConfig":"18"},{"size":4313,"mtime":1608920994064,"results":"25","hashOfConfig":"18"},{"size":1082,"mtime":1570998749000,"results":"26","hashOfConfig":"18"},{"size":4315,"mtime":1570998749000,"results":"27","hashOfConfig":"18"},{"size":9970,"mtime":1608916100794,"results":"28","hashOfConfig":"18"},{"size":435,"mtime":1570998749000,"results":"29","hashOfConfig":"18"},{"size":1448,"mtime":1570998749000,"results":"30","hashOfConfig":"18"},{"size":4118,"mtime":1570998749000,"results":"31","hashOfConfig":"18"},{"size":2345,"mtime":1570998749000,"results":"32","hashOfConfig":"18"},{"size":224,"mtime":1608974336371,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ai0bvz",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"43"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/hp/Desktop/ReactCoursera/myapp/src/App.js",[],"/home/hp/Desktop/ReactCoursera/myapp/src/components/MenuComponent.js",[],"/home/hp/Desktop/ReactCoursera/myapp/src/components/DishdetailComponent.js",[],["71","72"],"/home/hp/Desktop/ReactCoursera/myapp/src/index.js",[],["73","74"],"/home/hp/Desktop/ReactCoursera/myapp/src/reportWebVitals.js",[],"/home/hp/Desktop/ReactCoursera/myapp/src/components/MainComponent.js",["75"],"import React, { Component } from 'react';\nimport MenuComponent from './MenuComponent';\nimport DishDetail from './DishdetailComponent';\nimport About from './AboutComponent';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport Home from './HomeComponent';\nimport Contact from './ContactComponent';\nimport {Switch, Route, Redirect, withRouter} from 'react-router-dom';\nimport { connect } from 'react-redux';\n\n\n//maps the the state variables to other components as props\nconst mapStateToProps = state =>{\n    return {\n        dishes : state.dishes,\n        comments :state.comments,\n        promotions : state.promotions,\n        leaders : state.leaders\n    }\n}\nclass MainComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        \n    }\n\n   \n\n    render() {\n\n        const HomePage = () => {\n            return(\n                // extract all dishes where featured is true and filter will return an array hence index zero is mentioned\n                <Home\n                 dish={this.props.dishes.filter((dish)=>dish.featured)[0]}\n                promotion={this.props.promotions.filter((promo)=>promo.featured)[0]}\n                leader={this.props.leaders.filter((leader)=>leader.featured)[0]}\n                />\n            );\n        }\n\n        const DishWithId = ({match}) => {\n            return(\n                <DishDetail dish={this.props.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]} \n                  comments={this.props.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))} />\n            );\n          };\n\n        return (\n            <div >\n                <Header />\n                 <div>\n                    <Switch>\n                        <Route path=\"/home\" component = {HomePage} />\n                        <Route exact path=\"/menu\" component = {() => <MenuComponent dishes={this.props.dishes}/>} />\n                        <Route path = '/menu/:dishId' component={DishWithId}/>\n                        <Route exact path=\"/aboutus\" component={() => <About leaders={this.props.leaders} />} />\n                        <Route exact path=\"/contactus\" component={Contact}/>\n                        <Redirect to=\"/home\" />\n                    </Switch>\n                </div>\n                <Footer />\n            </div >\n\n        );\n    }\n}\n\n\n//Connecting the main component to access the store elements with the react router\nexport default withRouter(connect(mapStateToProps)(MainComponent));","/home/hp/Desktop/ReactCoursera/myapp/src/components/FooterComponent.js",[],"/home/hp/Desktop/ReactCoursera/myapp/src/components/HeaderComponent.js",["76"],"/home/hp/Desktop/ReactCoursera/myapp/src/components/HomeComponent.js",[],"/home/hp/Desktop/ReactCoursera/myapp/src/components/AboutComponent.js",[],"/home/hp/Desktop/ReactCoursera/myapp/src/components/ContactComponent.js",["77"],"import React,{ Component } from 'react';\nimport {Breadcrumb, Button, BreadcrumbItem, Form , FormGroup, Label, Col, Input, FormFeedback } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\nclass Contact extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            firstname:'',\n            lastname:'',\n            telnum:'',\n            email:'',\n            agree:false,\n            contactType: 'Tel.',\n            message: '',\n            touched: {\n                firstname:false,\n                lastname:false,\n                telnum : false,\n                email : false,\n            }\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleBlur = this.handleBlur.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name; \n\n        this.setState({\n            [name] : value\n        })\n    }\n\n    handleSubmit(event){\n        console.log('Current State is: ' + JSON.stringify(this.state));\n        alert('Current State is: ' + JSON.stringify(this.state));\n        event.preventDefault();\n    }\n\n    handleBlur = (field) =>(event) =>{\n        this.setState({\n            touched : { ...this.state.touched, [field]:true }\n        });\n    }\n\n    validate(firstname, lastname, telnum, email) {\n        const errors = {\n            firstname:'',\n            lastname:'',\n            telnum:'',\n            email:'',\n        };\n\n        if(this.state.touched.firstname && firstname.length < 3){\n            errors.firstname = 'First Name should be >= 3 characters';\n        }else if(this.state.touched.firstname && firstname.length > 10){\n            errors.firstname = 'First Name should be <=10 characters';\n        }if(this.state.touched.lastname && lastname.length<3){\n            errors.lastname = 'Last Name should be >= 3 characters';\n        }else if(this.state.touched.lastname && lastname.length>10){\n            errors.lastname = 'Last Name should be <=10 characters';\n        }\n\n        const reg =/^\\d+$/;\n        if(this.state.touched.telnum && !reg.test(telnum)){\n            errors.telnum = 'Tel. Number should contain only digits'; \n        }\n\n        if(this.state.touched.email && email.split('').filter(x=> x=== '@').length !==1){\n            errors.email = 'Email should contain a @';\n        }\n\n        return errors;\n\n    }\n\n    render(){\n\n        const errors = this.validate(this.state.firstname, this.state.lastname, this.state.telnum, this.state.email);\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem>\n                            <Link to='/home'>Home</Link>\n                        </BreadcrumbItem>\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Contact Us</h3>\n                        <hr/>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                    <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                            <h5>Our Address</h5>\n                            <address>\n                            121, Abc def ghi jkl<br />\n                            Abc def ghi, mno<br />\n                            INDIA<br />\n                            <i className=\"fa fa-phone\"></i>: +91 01234 56789<br />\n                            <i className=\"fa fa-fax\"></i>: +91 98765 43210<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                            </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+910123456789\"><i className=\"fa fa-phone\"></i> Call</a>\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Send Us Your Feedback</h3>\n                    </div>\n                    <div className=\"col-12 col-md-9\">\n\n                    <Form onSubmit={this.handleSubmit}>\n                    <FormGroup row>\n                        <Label md={2} htmlFor=\"firstname\" >First Name</Label>\n                        <Col md={10}>  {/*md is for Colspan*/}\n                            <Input type=\"text\" id=\"firstname\" name=\"firstname\" placeholder=\"First Name\" value={this.state.firstname}\n                            onChange={this.handleInputChange}\n                            onBlur ={this.handleBlur('firstname')}\n                            valid = {errors.firstname === ''}\n                            invalid = {errors.firstname !==''}\n                            />\n                            <FormFeedback>{errors.firstname}</FormFeedback>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label md={2} htmlFor=\"lastname\" >Last Name</Label>\n                            <Col md={10}>\n                                <Input type=\"text\" id=\"lastname\" name=\"lastname\" placeholder=\"Last Name\" value={this.state.lastname} \n                                onBlur ={this.handleBlur('lastname')}\n                                onChange={this.handleInputChange}\n                                valid = {errors.lastname === ''}\n                                invalid = {errors.lastname !== ''}\n                                />\n                                <FormFeedback>{errors.lastname}</FormFeedback>\n                            </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label md={2} htmlFor=\"telnum\">Phone</Label>\n                        <Col md={10}>\n                            <Input type=\"tel\" id=\"telnum\" name=\"telnum\" placeholder=\"Phone Number\" value={this.state.telnum}\n                            onChange = {this.handleInputChange}\n                            onBlur ={this.handleBlur('telnum')}\n                            valid = {errors.telnum === ''}\n                            invalid = {errors.telnum !==''}\n                            />\n                            <FormFeedback>{errors.telnum}</FormFeedback>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label md={2} htmlFor=\"email\">Email</Label>\n                        <Col md={10}>\n                            <Input type=\"text\" id=\"email\" name=\"email\" placeholder=\"Email\" value={this.state.email} \n                            onChange = {this.handleInputChange}\n                            onBlur ={this.handleBlur('email')}\n                            valid = {errors.email === ''}\n                            invalid = {errors.email!==''}\n                            />\n                            <FormFeedback>{errors.email}</FormFeedback>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Col md={{size: 6, offset: 2}}>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"checkbox\" onChange={this.handleInputChange} name=\"agree\"\n                                    checked={this.state.agree} /> {' '}\n                                    <strong>May we contact you?</strong>\n                                </Label> \n                            </FormGroup>\n                        </Col>\n                        <Col md={{size: 3, offset: 1}}>\n                            <Input type=\"select\" name=\"contactType\"\n                            value={this.state.contactType} \n                            onChange={this.handleInputChange}\n                            > \n                            <option>Tel.</option>\n                            <option>Email</option>\n                        </Input>\n                        </Col>\n\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label md={2} htmlFor=\"feedback\">Feedback</Label>\n                        <Col md={10}>\n                            <Input type=\"textarea\" id=\"message\" rows=\"12\" name=\"feedback\" placeholder=\"Feedback\" value={this.state.feedback} \n                            onBlur ={this.handleBlur('feedback')}\n                            onChange={this.handleInputChange}\n                            \n                            />\n                            \n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Col md={{size: 10, offset: 2}}>\n                            <Button type=\"submit\" color=\"primary\">\n                                Send Feedback\n                            </Button>\n                        </Col>\n                    </FormGroup>\n                    </Form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Contact;","/home/hp/Desktop/ReactCoursera/myapp/src/shared/promotions.js",[],"/home/hp/Desktop/ReactCoursera/myapp/src/shared/dishes.js",[],"/home/hp/Desktop/ReactCoursera/myapp/src/shared/comments.js",[],["78","79"],"/home/hp/Desktop/ReactCoursera/myapp/src/shared/leaders.js",[],"/home/hp/Desktop/ReactCoursera/myapp/src/redux/configureStore.js",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"80","replacedBy":"84"},{"ruleId":"82","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":24,"column":5,"nodeType":"88","messageId":"89","endLine":27,"endColumn":6},{"ruleId":"90","severity":1,"message":"91","line":2,"column":99,"nodeType":"92","messageId":"93","endLine":2,"endColumn":107},{"ruleId":"94","severity":1,"message":"95","line":121,"column":29,"nodeType":"96","endLine":121,"endColumn":71},{"ruleId":"80","replacedBy":"97"},{"ruleId":"82","replacedBy":"98"},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],["99"],["100"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'ModalNav' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["99"],["100"],"no-global-assign","no-unsafe-negation"]